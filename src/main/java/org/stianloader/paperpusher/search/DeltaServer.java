package org.stianloader.paperpusher.search;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import org.jetbrains.annotations.NotNull;
import org.slf4j.LoggerFactory;
import org.stianloader.paperpusher.Paperpusher;

import io.javalin.http.ContentType;
import io.javalin.http.Context;
import io.javalin.http.HttpStatus;

final class DeltaServer {

    static final void listProjects(@NotNull Connection dbConn, @NotNull Context context) {
        StringBuilder htmlOut = new StringBuilder();
        htmlOut.append("""
                        <!DOCTYPE html>
                        <html lang="en">
                        <head>
                        <title>Project list</title>
                        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
                        <meta name="viewport" content="width=device-width, initial-scale=1"/>
                        </head>
                        <body>
                        <h1>Project list</h1>
                        <hr>
                        """);

        try (Statement statement = dbConn.createStatement()) {
            try (ResultSet result = statement.executeQuery("SELECT rowid, groupId, artifactId FROM gaid ORDER BY groupId, artifactid");
                    PreparedStatement versionCountQuery = dbConn.prepareStatement("SELECT COUNT(*) FROM gavid WHERE gaId = ?")) {

                String lastGroup = "";
                boolean firstGroup = true;
                while (result.next()) {
                    int gaId = result.getInt(1);
                    String groupId = result.getString(2);
                    String artifactId = result.getString(3);

                    if (!groupId.equals(lastGroup)) {
                        lastGroup = groupId;
                        if (!firstGroup) {
                            htmlOut.append("</ul>");
                        }
                        firstGroup = false;
                        htmlOut.append("<hr><h2>Group ").append(groupId).append("</h2><ul>");
                    }

                    versionCountQuery.setInt(1, gaId);
                    int versionCount = 0;
                    try (ResultSet versionCountResult = versionCountQuery.executeQuery()) {
                        versionCount = versionCountResult.getInt(1);
                    }

                    htmlOut.append("<li><p>").append(artifactId).append("&emsp;<span style=\"color:grey\">").append(versionCount).append(" versions published</span></p></li>");
                }

                if (!firstGroup) {
                    htmlOut.append("</ul>");
                }
            }
        } catch (SQLException e) {
            LoggerFactory.getLogger(DeltaServer.class).error("Unable to query projects from database", e);
            context.result("HTTP Response code 500 (INTERNAL SERVER ERROR): The server was unable to obtain the projects from the underlying database. Please report this bug.");
            context.status(HttpStatus.INTERNAL_SERVER_ERROR);
            return;
        }

        htmlOut.append("<hr><hr><p style=\"color:grey\" align=\"right\">&copy;" + Paperpusher.COPYRIGHT_YEARS + " stianloader.org, page generated by nightly-paperpusher ")
            .append(Paperpusher.PAPERPUSHER_VERSION).append("</p>\n</body>\n</html>");

        context.result(htmlOut + "");
        context.contentType(ContentType.HTML);
        context.status(HttpStatus.OK);
    }
}
